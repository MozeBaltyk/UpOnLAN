name: release

on:
  workflow_dispatch:

jobs:
  release:
    name: Build Release
    runs-on: ubuntu-latest
    if: github.repository == 'mozebaltyk/uponlan'
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      packages: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main

    - name: Get current webapp version
      id: get_version
      run: echo "TAG_VERSION=$(jq -r '.version' ./uponlan/src/webapp/package.json)" >> $GITHUB_OUTPUT

    - name: Check if tag exists
      id: check_tag
      run: echo "TAG_EXISTS=$(git tag | grep ${{ steps.get_version.outputs.TAG_VERSION }})" >> $GITHUB_OUTPUT

    - name: Fail if tag exists
      env:
        tag_version: ${{ steps.get_version.outputs.TAG_VERSION }}
        tag_exists: ${{ steps.check_tag.outputs.TAG_EXISTS }}
      if: ${{ steps.get_version.outputs.TAG_VERSION == steps.check_tag.outputs.TAG_EXISTS }}
      uses: actions/github-script@v7
      with:
        script: |
            core.setFailed('Release tag already exists in git (tag_exists var: ${tag_exists} and tag_version: ${tag_version})')

    - name: Set release tag
      run: echo "release_tag=${{ steps.get_version.outputs.TAG_VERSION }}" >> $GITHUB_ENV

    - name: Build release
      run: |
        echo "Building release for version ${{ steps.get_version.outputs.TAG_VERSION }}"
        ./scripts/release_menu.sh ${{ steps.get_version.outputs.TAG_VERSION }}

    - name: Extract release notes
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v2

    - name: Create Release and Upload Assets
      uses: svenstaro/upload-release-action@v2
      with:
        file: release/githubout/*
        file_glob: true
        overwrite: true
        prerelease: false
        release_name: ${{ env.release_tag }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.release_tag }}
        body: ${{ steps.extract-release-notes.outputs.release_notes }}
