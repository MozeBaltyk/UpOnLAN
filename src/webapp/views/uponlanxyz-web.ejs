// uponlan.xyz
// Client side javascript

// Initiate a websocket connection to the server
var host = window.location.hostname; 
var port = window.location.port;
var protocol = window.location.protocol;
var socket = io.connect(protocol + '//' + host + ':' + port, {path: "<%= baseurl %>socket.io"});
// If the page is being loaded for the first time render in the homepage
$(document).ready(function(){renderdash()})

//// Dashboard Page rendering ////
function renderdash(){
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Dashboard</h2></center>');
  socket.emit('getdash');
}
socket.on('renderdash', function(response){
  var tftpversion = response.tftpversion;
  var nginxversion = response.nginxversion;
  var wolversion = response.wolversion;
  var otelversion = response.otelversion;
  var webversion = response.webversion;
  var menuversion = response.menuversion;
  var menuorigin = response.menuorigin;
  var remotemenuversion = response.remotemenuversion;
  var cpustats = response.cpu;
  var cpupercent = response.CPUpercent;
  var memstats = response.mem;
  var usedmem = (memstats.active/memstats.total)*100;
  var totalmem = parseFloat(memstats.total/1000000000).toFixed(2);
  var diskbuffer = parseFloat(memstats.buffcache/1000000000).toFixed(2);
  if (menuversion != remotemenuversion){
    var upgradebutton = '<button onclick="upgrademenus(\'' + remotemenuversion + '\')" class="btn btn-success btn-sm">' + remotemenuversion + ' Available</button>'
  }
  else{
    var upgradebutton = '<button class="btn btn-secondary btn-sm">Up to Date</button>'
  }
  $('#pagecontent').empty();
  $('#pagecontent').append('\
  <div class="card mb-3">\
    <div class="card-header">\
      Software and Services\
    </div>\
    <div class="card-body card-deck">\
      <div class="card mb-3">\
        <div class="card-header">\
          Versions\
        </div>\
        <div class="card-body">\
        <table class="table table-hover">\
          <tr><td>Webapp Version: </td><td><a target="_blank" href="https://github.com/mozebaltyk/uponlan/releases/' + webversion + '">' + webversion + '</a></td></tr>\
          <tr><td>Menus Version:</td><td><a target="_blank" href="' + menuorigin + '/releases/' + menuversion + '">' + menuversion + '</a></td></tr>\
          <tr><td>Upgrade Menus to latest</td><td><div id="upgradebutton">' + upgradebutton + '</div></td></tr>\
        </table>\
        </div>\
      </div>\
      <div class="card mb-3">\
        <div class="card-header">\
          Services\
        </div>\
        <div class="card-body">\
        <table class="table table-hover">\
          <tr><td>TFTP:</td><td>' + tftpversion + '</td></tr>\
          <tr><td>WebServer:</td><td>' + nginxversion + '</td></tr>\
          <tr><td>WakeOnLAN:</td><td>' + wolversion + '</td></tr>\
        </table>\
        </div>\
      </div>\
    </div>\
  </div>\
  <div class="card mb-3">\
    <div class="card-header">\
      System Stats\
    </div>\
    <div class="card-body card-deck">\
      <div class="card mb-3">\
        <div class="card-header">\
          CPU\
        </div>\
        <div class="card-body">\
        <table class="table table-hover">\
          <tr><td>CPU</td><td>' + cpustats.manufacturer + ' ' + cpustats.brand + '</td></tr>\
          <tr><td>Cores</td><td>' + cpustats.cores + '</td></tr>\
          <tr><td>Usage</td><td><div class="progress"><div class="progress-bar" role="progressbar" style="width: ' + cpupercent + '%;" aria-valuenow="' + cpupercent + '" aria-valuemin="0" aria-valuemax="100"></div></div></td></tr>\
        </table>\
        </div>\
      </div>\
      <div class="card mb-3">\
        <div class="card-header">\
          Memory\
        </div>\
        <div class="card-body">\
        <table class="table table-hover">\
          <tr><td>Total Mem</td><td>' + totalmem + 'G</td></tr>\
          <tr><td>Disk buffer</td><td>' + diskbuffer + 'G</td></tr>\
          <tr><td>Usage</td><td><div class="progress"><div class="progress-bar" role="progressbar" style="width: ' + usedmem + '%;" aria-valuenow="' + usedmem + '" aria-valuemin="0" aria-valuemax="100"></div></div></td></tr>\
        </table>\
        </div>\
      </div>\
    </div>\
  </div>\
  <div class="card mb-3">\
    <div class="card-header d-flex justify-content-between align-items-center">\
      Logs & Metrics\
    </div>\
    <div class="card-body">\
      <div class="row">\
        <div class="col-md-7 mb-3">\
          <div class="card h-100">\
            <!-- Logs Tabs Card -->\
            <div class="card-header">\
              <ul class="nav nav-tabs card-header-tabs" id="logTabs" role="tablist">\
                <li class="nav-item">\
                  <a class="nav-link active" id="webapp-tab" data-toggle="tab" href="#webapp-log" role="tab" aria-controls="webapp-log" aria-selected="true">Webapp Logs</a>\
                </li>\
                <li class="nav-item">\
                  <a class="nav-link" id="tftp-tab" data-toggle="tab" href="#tftp-log" role="tab" aria-controls="tftp-log" aria-selected="false">TFTP Logs</a>\
                </li>\
                <li class="nav-item">\
                  <a class="nav-link" id="nginx-access-tab" data-toggle="tab" href="#nginx-access-log" role="tab" aria-controls="nginx-access-log" aria-selected="false">Nginx Access Logs</a>\
                </li>\
                <li class="nav-item">\
                  <a class="nav-link" id="nginx-error-tab" data-toggle="tab" href="#nginx-error-log" role="tab" aria-controls="nginx-error-log" aria-selected="false">Nginx Error Logs</a>\
                </li>\
              </ul>\
            </div>\
            <div class="card-body d-flex flex-column" style="height:340px; background:#222; color:#eee; font-family:monospace; font-size:0.9em;">\
              <div class="tab-content flex-grow-1" id="logTabsContent" style="overflow-y: auto;">\
                <div class="tab-pane fade show active h-100" id="webapp-log" role="tabpanel" aria-labelledby="webapp-tab">\
                  <div id="weblog-content" class="h-100" style="overflow-y:auto;">Click tab to load logs...</div>\
                </div>\
                <div class="tab-pane fade h-100" id="tftp-log" role="tabpanel" aria-labelledby="tftp-tab">\
                  <div id="tftplog-content" class="h-100" style="overflow-y:auto;">Click tab to load logs...</div>\
                </div>\
                <div class="tab-pane fade h-100" id="nginx-access-log" role="tabpanel" aria-labelledby="nginx-access-tab">\
                  <div id="nginx-access-log-content" class="h-100" style="overflow-y:auto;">Click tab to load logs...</div>\
                </div>\
                <div class="tab-pane fade h-100" id="nginx-error-log" role="tabpanel" aria-labelledby="nginx-error-tab">\
                  <div id="nginx-error-log-content" class="h-100" style="overflow-y:auto;">Click tab to load logs...</div>\
                </div>\
              </div>\
            </div>\
          </div>\
        </div>\
        <div class="col-md-5 mb-3">\
          <div class="card h-100">\
            <!-- Live Metrics Card -->\
            <div class="card-header">Live Metrics</div>\
            <div class="card-body d-flex justify-content-center align-items-center">\
              <canvas id="MetricsChart" style="width:100%; min-height:250px;"></canvas>\
            </div>\
          </div>\
        </div>\
      </div>\
    </div>\
  </div>\
  <br>\
  <div class="card-footer text-center" style="background: #f8f9fa;">\
    <span class="text-muted">\
      <a href="https://github.com/MozeBaltyk/UpOnLAN" target="_blank" class="text-secondary" style="text-decoration:none;">\
        <img src="https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png" alt="GitHub" style="height:2em;vertical-align:middle;margin-right:12px;">\
        UpOnLAN.xyz\
      </a>\
    </span>\
  </div>\
  ');
  // Render logs in the dashboard
  renderLog('#webapp-tab', '#weblog-content', 'getweblog', 'renderweblog');
  renderLog('#tftp-tab', '#tftplog-content', 'gettftplog', 'rendertftplog');
  renderLog('#nginx-access-tab', '#nginx-access-log-content', 'getnginxaccesslog', 'rendernginxaccesslog');
  renderLog('#nginx-error-tab', '#nginx-error-log-content', 'getnginxerrorlog', 'rendernginxerrorlog');
  // show the webapp logs tab by default
  $('#webapp-tab').trigger('click');

  // Initialize the live metrics chart
  initMetricsChart();
});

// Render metrics
let MetricsChart;
let storedChartData = [];
const MAX_POINTS = 45;

// Call this inside renderdash after canvas is injected
function initMetricsChart() {
  const canvas = document.getElementById('MetricsChart');
  if (!canvas) return setTimeout(initMetricsChart, 100); // Retry after short delay

  const ctx = canvas.getContext('2d');

  // If canvas was replaced in the DOM (e.g., after tab switch), destroy the old chart
  if (MetricsChart && MetricsChart.canvas !== canvas) {
    MetricsChart.destroy();
    MetricsChart = null;
  }

  // Avoid re-creating if already valid
  if (MetricsChart) return;

  MetricsChart = new Chart(ctx, {
    type: 'line',
    data: {
      datasets: [
        { label: 'Ngx Req.', borderColor: 'rgba(70,130,180,0.7)', borderWidth: 1, data: [], fill: false, tension: 0.4, },     // SteelBlue
        { label: 'Ngx Accept.', borderColor: 'rgba(60,179,113,0.7)', borderWidth: 1, data: [], fill: false, tension: 0.4, },  // MediumSeaGreen
        { label: 'Ngx Handl.', borderColor: 'rgba(255,165,0,0.7)', borderWidth: 1, data: [], fill: false, tension: 0.4, },    // Orange
        { label: 'Ngx Active', borderColor: 'rgba(220,20,60,0.7)', borderWidth: 1, data: [], fill: false, tension: 0.4, },    // Crimson
        { label: 'TFTP Req.', borderColor: 'rgba(155,89,182,0.5)', borderWidth: 1, data: [], fill: false, tension: 0.4, },    // Soft Amethyst
      ]
    },
    options: {
      responsive: true,
      animation: false,
      scales: {
        x: {
          type: 'time',
          time: {
            unit: 'minute',
            tooltipFormat: 'HH:mm:ss',
            displayFormats: { minute: 'HH:mm' }
          },
          title: { display: false, text: 'Time' }
        },
        y: {
          beginAtZero: true,
          title: { display: true, text: 'TFTP / Nginx Req. every 10s' }
        }
      },
      elements: {
        line: { tension: 0.1 }, // Smooth lines
        point: { radius: 1, hoverRadius: 2 } // Smaller points
      },
      plugins: {
        legend: {
          display: true,
          position: 'bottom',
          labels: {
            boxWidth: 9,
            font: {
              size: 9
            },
            color: '#444'
          }
        }
      }
    }
  });

  // Restore historical data
  storedChartData.forEach(point => {
    MetricsChart.data.datasets.forEach((d, i) => {
      d.data.push(point[i]);
    });
  });

  MetricsChart.update();
}

socket.on('metrics:update', function (data) {
  const time = new Date(data.timestamp || Date.now());

  const point = [
    { x: time, y: data.nginx.requests },
    { x: time, y: data.nginx.accepts },
    { x: time, y: data.nginx.handled },
    { x: time, y: data.nginx.active },
    { x: time, y: data.tftp.requests },
  ];

  // Store it regardless of chart existence (for restoration later)
  storedChartData.push(point);
  if (storedChartData.length > MAX_POINTS) storedChartData.shift();

  // If chart is ready, update it live
  if (MetricsChart) {
    MetricsChart.data.datasets.forEach((d, i) => {
      d.data.push(point[i]);
      if (d.data.length > MAX_POINTS) d.data.shift();
    });
    MetricsChart.update();
  }
});

// Common function to render logs in tabs
function renderLog(tabSelector, contentSelector, emitEvent, onResponseEvent) {
  $(tabSelector).on('click', function() {
    $(contentSelector).text('Loading...');
    socket.emit(emitEvent);
  });
  socket.on(onResponseEvent, function(logContent) {
    // convert newlines to <br> to keep formatting
    $(contentSelector).html(logContent.replace(/\n/g, '<br>'));
  });
}

// Upgrade menu files
function upgrademenus(version){
  $('#upgradebutton').empty();
  $('#upgradebutton').append('<div class="spinner-grow" style="width: 1rem; height: 1rem;" role="status"><span class="sr-only">Loading...</span></div>');
  socket.emit('upgrademenu', version);
}
function downloadmenus(version){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Pulling menus at version requested</h2></center>');
  socket.emit('upgrademenu', version);
}
function downloadmenusnetboot(version){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Pulling menus at version requested</h2></center>');
  socket.emit('upgrademenunetboot', version);
}
// Re-render dash hook
socket.on('renderdashhook', function(){
  if($('#upgradebutton').length){
    renderdash();
  }
});

//// Config Page rendering ////
let current_menu_version = '0.0.1';
function renderconfig(){
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Config Items</h2></center>');
  socket.emit('getconfig');
}
socket.on('renderconfig', function(remote_files, local_files, list_rom_files, list_index_files, local_nginx_url, menu_version){
  current_menu_version = (menu_version && menu_version !== 'none') ? menu_version : '0.0.1';
  $('#pagecontent').empty();
  $('#pagecontent').append('\
  <div class="card">\
    <div class="card-header">Menus</div>\
  </div>\
  <div class="container-fluid">\
    <div class="row flex-xl-nowrap">\
      <div class="col-12 col-md-4 col-xl-3 bd-sidebar">\
        <button class="btn btn-link bd-search-docs-toggle d-md-none p-0 ml-3" type="button" data-toggle="collapse" data-target="#bd-docs-nav" aria-controls="bd-docs-nav" aria-expanded="false" aria-label="Toggle files navigation">\
          <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 30 30" width="30" height="30" focusable="false">\
            <title>Files</title>\
            <path stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-miterlimit="10" d="M4 7h22M4 15h22M4 23h22"/>\
          </svg>\
        </button>\
        <nav class="collapse bd-links" id="bd-docs-nav">\
          <div class="accordion" id="sidebarAccordion">\
            <div class="card">\
              <div class="card-header p-2" id="headingIPXE">\
                <h6 class="mb-0">\
                  <button class="btn btn-link btn-sm text-dark font-weight-bold" type="button" data-toggle="collapse" data-target="#collapseIPXE" aria-expanded="true" aria-controls="collapseIPXE"> 🧩 iPXE Menus</button>\
                </h6>\
              </div>\
              <div id="collapseIPXE" class="collapse show" aria-labelledby="headingIPXE" data-parent="#sidebarAccordion">\
                <div id="ipxe-file-list" style="max-height:60vh; overflow-y:auto; padding:5px;"></div>\
              </div>\
            </div>\
            <div class="card">\
              <div class="card-header p-2" id="headingROM">\
                <h6 class="mb-0">\
                  <button class="btn btn-link btn-sm text-dark font-weight-bold collapsed" type="button" data-toggle="collapse" data-target="#collapseROM" aria-expanded="false" aria-controls="collapseROM"> 💿 ROM Files</button>\
                </h6>\
              </div>\
              <div id="collapseROM" class="collapse" aria-labelledby="headingROM" data-parent="#sidebarAccordion">\
                <div id="rom-file-list" style="max-height:60vh; overflow-y:auto; padding:5px;"></div>\
                <div class="mt-3 mb-2 text-center px-2">\
                  <button id="btnBuild" class="btn btn-sm btn-primary px-2">Build</button>\
                </div>\
              </div>\
            </div>\
          </div>\
        </nav>\
      </div>\
      <div id="configcontent" class="col-12 col-md-8 col-xl-9">\
        <center>\
          <br><h3>Edit file on the left panel</h3><br>\
          <h3>Create a new file:</h3>\
          <div class="form-row">\
            <div class="col-md-4"></div>\
            <div class="col-md-2"><input type="text" class="form-control ipxefilename" placeholder="myfile.ipxe"></div>\
            <div class="col-md-2"><button onclick="createipxe()" class="btn btn-primary form-control">Create New</button></div>\
            <div class="col-md-4"></div>\
          </div><br>\
          <h3>Import a menu:</h3>\
          <div class="form-row">\
            <div class="col-md-4"></div>\
            <div class="col-md-4"><button onclick="devbrowser()" class="btn btn-outline-info form-control">Menu From Endpoint URL</button></div>\
            <div class="col-md-4"></div>\
          </div><br>\
          <div class="form-row">\
            <div class="col-md-4"></div>\
            <div class="col-md-4"><button onclick="nbbrowser()" class="btn btn-outline-info form-control">Menu Netboot.xyz</button></div>\
            <div class="col-md-4"></div>\
          </div><br>\
          <h3>Erase menus:</h3>\
          <div class="form-row">\
            <div class="col-md-4"></div>\
            <div class="col-md-4"><button onclick="resetmenu()" class="btn btn-outline-danger form-control">Reset Menus</button></div>\
            <div class="col-md-4"></div>\
          </div>\
        </center>\
      </div>\
    </div>\
  </div>');

  // Fill iPXE menus
  $(local_files).each(function(index, value) {
    $('#ipxe-file-list').append('\
      <div class="bd-toc-item">\
        <div style="cursor:pointer;" class="bd-toc-link" onclick="editgetfile(\'' + value + '\',true)">\
          ' + value + ' - custom\
        </div>\
      </div>');
  }).promise().done(function(){
    $(remote_files).each(function(index, value) {
      if (!local_files.includes(value)){
        $('#ipxe-file-list').append('\
          <div class="bd-toc-item">\
            <div style="cursor:pointer;" class="bd-toc-link" onclick="editgetfile(\'' + value + '\',false)">\
              ' + value + '\
            </div>\
          </div>');
      }
    });
  });

  // Fill ROM files
  $(list_rom_files).each(function(index, value) {
    $('#rom-file-list').append('\
      <div class="bd-toc-item">\
        <div>' + value + '</div>\
      </div>');
  });
  // Fill index.html list
  $(list_index_files).each(function(index, value) {
    $('#rom-file-list').append(`
      <div class="bd-toc-item">
        <a target="_blank" href="${local_nginx_url}/rom/${value}">${value}</a>
      </div>
    `);
  });
});

// Inject the modal HTML once (outside of renderconfig so it’s only created once)
if ($('#buildModal').length === 0) {
  $('body').append(`
    <div class="modal fade" id="buildModal" tabindex="-1" role="dialog" aria-labelledby="buildModalLabel">
      <div class="modal-dialog modal-lg" role="document">
        <form id="buildForm" class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="buildModalLabel">Build Options</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span>&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div id="buildAlertArea"></div>
            <div id="buildFormBody">
              <div class="form-check">
                <input type="checkbox" class="form-check-input" id="optionEFI" name="optionEFI" checked>
                <label class="form-check-label" for="optionEFI">Generate EFI disks</label>
              </div>
              <div class="form-check">
                <input type="checkbox" class="form-check-input" id="optionHybrid" name="optionHybrid">
                <label class="form-check-label" for="optionHybrid">Generate Hybrid disks</label>
              </div>
              <div class="form-check">
                <input type="checkbox" class="form-check-input" id="optionLegacy" name="optionLegacy" checked>
                <label class="form-check-label" for="optionLegacy">Generate Legacy disks</label>
              </div>
              <div class="form-check">
                <input type="checkbox" class="form-check-input" id="optionLinux" name="optionLinux">
                <label class="form-check-label" for="optionLinux">Generate Linux disks</label>
              </div>
              <div class="form-check">
                <input type="checkbox" class="form-check-input" id="optionRpi" name="optionRpi">
                <label class="form-check-label" for="optionRpi">Generate Rpi disks</label>
              </div>
              <div class="form-check">
                <input type="checkbox" class="form-check-input" id="optionIndex" name="optionIndex" checked>
                <label class="form-check-label" for="optionIndex">Generate index.html</label>
              </div>
              <div class="form-check">
                <input type="checkbox" class="form-check-input" id="optionSignatures" name="optionSignatures">
                <label class="form-check-label" for="optionSignatures">Generate Signatures</label>
              </div>
              <hr>
              <div class="form-group row">
                <label for="siteNameInput" class="col-md-3 col-form-label text-md-right">Site Name:</label>
                <div class="col-md-7">
                  <input id="siteNameInput" type="text" class="form-control" placeholder="uponlan.xyz" autocomplete="off">
                  <div class="invalid-feedback">This field is required.</div>
                </div>
              </div>
              <div class="form-group row">
                <label for="bootDomainInput" class="col-md-3 col-form-label text-md-right">Boot Domain:</label>
                <div class="col-md-7">
                  <input id="bootDomainInput" type="text" class="form-control" placeholder="boot.uponlan.xyz" autocomplete="off">
                  <div class="invalid-feedback">This field is required.</div>
                </div>
              </div>
              <div class="form-group row">
                <label for="bootVersionInput" class="col-md-3 col-form-label text-md-right">Boot Version:</label>
                <div class="col-md-7">
                  <input id="bootVersionInput" type="text" class="form-control" placeholder="0.0.x" autocomplete="off">
                  <div class="invalid-feedback">This field is required.</div>
                </div>
              </div>
            </div>
            <div id="buildProgressContainer" class="my-4 d-none">
              <div class="progress" style="height: 30px;">
                <div id="buildProgressBar" class="progress-bar progress-bar-striped progress-bar-animated bg-success" 
                  role="progressbar" style="width: 0%; font-weight: bold;">0%</div>
              </div>
              <p id="buildTaskLabel" class="mt-3 text-center font-weight-bold"></p>
            </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Build</button>
          </div>
        </form>
      </div>
    </div>
  `);
}

// Show modal on Build button click
$(document).on('click', '#btnBuild', function() {
  $('#bootVersionInput').attr('placeholder', current_menu_version); // Set placeholder to current version
  $('#buildModal').modal('show');
  // Reset Cancel button behavior
  $('#cancelBuildBtn').off('click').on('click', function () {
    $('#buildModal').modal('hide');
  });
});

// Wait until the modal is fully shown, then safely set focus if needed
$('#buildModal').on('shown.bs.modal', function () {
  $('#bootVersionInput').trigger('focus');
});

// Handle form submission
$('#buildForm').on('submit', function (e) {
  e.preventDefault();
  const buildOptions = {
    generate_disks_efi: $('#optionEFI').is(':checked'),
    generate_disks_hybrid: $('#optionHybrid').is(':checked'),
    generate_disks_legacy: $('#optionLegacy').is(':checked'),
    generate_disks_linux: $('#optionLinux').is(':checked'),
    generate_disks_rpi: $('#optionRpi').is(':checked'),
    generate_index: $('#optionIndex').is(':checked'),
    generate_signatures: $('#optionSignatures').is(':checked'),
    site_name: $('#siteNameInput').val().trim(),
    boot_domain: $('#bootDomainInput').val().trim(),
    boot_version: $('#bootVersionInput').val().trim()
  };

  // If none of the disk options are checked, set generate_disks: false
  if (
    !buildOptions.generate_disks_efi &&
    !buildOptions.generate_disks_hybrid &&
    !buildOptions.generate_disks_legacy &&
    !buildOptions.generate_disks_linux &&
    !buildOptions.generate_disks_rpi
  ) {
    buildOptions.generate_disks = false;
  }

  // Reset error states
  $('#siteNameInput, #bootDomainInput, #bootVersionInput').removeClass('is-invalid');

  // Validate required fields again
  if (!buildOptions.site_name) $('#siteNameInput').addClass('is-invalid');
  if (!buildOptions.boot_domain) $('#bootDomainInput').addClass('is-invalid');
  if (!buildOptions.boot_version) $('#bootVersionInput').addClass('is-invalid');

  // Focus the first invalid input field (if any)
  const firstInvalidSelector = ['#siteNameInput', '#bootDomainInput', '#bootVersionInput']
    .find(selector => $(selector).hasClass('is-invalid'));
  if (firstInvalidSelector) {
    $(firstInvalidSelector).focus();
  }
  // Validate required fields
  if (!buildOptions.site_name || !buildOptions.boot_domain || !buildOptions.boot_version) {
    // Remove any previous warning alert
    $('#buildAlertArea .alert-warning').remove();
    // Show custom styled alert
    $('#buildAlertArea').html(`
      <div class="alert alert-warning alert-dismissible fade show" role="alert">
        Please provide at least: <strong>Site Name</strong>, <strong>Boot Domain</strong> and <strong>Boot Version</strong>.
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
    `);
    setTimeout(() => { $('#buildAlertArea .alert').alert('close'); }, 8000);
    document.querySelector('#buildAlertArea .alert-warning').scrollIntoView({ behavior: 'smooth' });
    return;
  }
  // Disable submit during processing
  $('#buildForm button[type="submit"]').prop('disabled', true);
  $('#buildFormBody').hide();
  $('#buildProgressContainer').removeClass('d-none');
  $('#buildProgressBar').removeClass('bg-danger').addClass('bg-success').css('width', '0%').text('0%');
  $('#buildTaskLabel').text('Initializing...');

  socket.emit('buildsubmit', buildOptions);

  $('#cancelBuildBtn').off('click').on('click', function () {
    socket.emit('buildcancel');
    $('#buildProgressContainer').addClass('d-none');
    $('#buildFormBody').show();
    $('#buildForm button[type="submit"]').prop('disabled', false);
    $('#buildModal').modal('hide');
  });
});

// Progress bar updates
socket.on('buildProgress', function (progress) {
  const percent = progress.taskCount > 0 
    ? Math.round((progress.tasksCompleted / progress.taskCount) * 100)
    : 0;

  $('#buildProgressBar')
    .css('width', percent + '%')
    .text(`${percent}%`);

  if (progress.currentTask) {
    $('#buildTaskLabel').text(`${progress.currentTask}`);
  }
});

// Build result handling
socket.on('buildMenuResult', function (result) {
  const alertArea = $('#buildAlertArea');

  alertArea.html(`
    <div class="alert ${result.success ? 'alert-success' : 'alert-danger'} alert-dismissible fade show" role="alert">
      ${result.message}
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
  `);

  $('#buildProgressBar')
    .removeClass('bg-success bg-danger')
    .addClass(result.success ? 'bg-success' : 'bg-danger')
    .css('width', '100%')
    .text(result.success ? '100%' : 'Failed');
  $('#buildTaskLabel').text(result.success ? 'Build completed successfully.' : 'Build failed. See logs for details.');

  setTimeout(() => {
    $('#buildProgressContainer').addClass('d-none');
    $('#buildFormBody').show();
    $('#buildForm button[type="submit"]').prop('disabled', false);
    $('#buildModal').modal('hide');
  }, 3000);
});

$('#cancelBuildBtn').on('click', function () {
  socket.emit('buildcancel');
  $('#buildProgressContainer').addClass('d-none');
  $('#buildFormBody').show();
  $('#buildForm button[type="submit"]').prop('disabled', false);
  $('#buildModal').modal('hide');
});

// Empty menu
function resetmenu() {
  if (confirm('Are you sure you want to reset the menu?')) {
    $('#configcontent').empty();
    $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Empty Menu</h2></center>');
    socket.emit('emptymenu');
    // Refresh the config page after a short delay
    setTimeout(renderconfig, 1000)
  }
}
// Render edit window
function editgetfile(filename,islocal){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting File Contents</h2></center>');
  socket.emit('editgetfile',filename,islocal);
}
socket.on('editrenderfile', function(response,filename,metadata){
  // Filter the buttons to display based on type
  if (metadata == 'nomenu'){
    var buttons = '';
  }
  else if (metadata == false){
    var buttons = '<button onclick="saveconfig(\'' + filename + '\')" class="btn btn-success m-3 float-right">Save Config</button>';
  }
  else if (metadata == true){
    var buttons = '<button onclick="saveconfig(\'' + filename + '\')" class="btn btn-success m-3 float-right">Save Config</button>\
                   <button onclick="revertconfig(\'' + filename + '\')" class="btn btn-danger m-3 float-right">Revert/Delete</button>';
  }
  $('#configcontent').empty();
  $('#configcontent').append('\
  <div class="container">\
    <div class="row">\
      <div class="col">\
        <h1 class="m-3">' + filename + '</h1>\
      </div>\
      <div class="col">\
        ' + buttons + '\
      </div>\
    </div>\
  </div>\
  <div id="editor" style="height:100%;width:100%"></div>');
  editor = ace.edit('editor');
  editor.setTheme('ace/theme/chrome');
  editor.session.setMode('ace/mode/sh');
  editor.$blockScrolling = Infinity;
  editor.setOptions({
    readOnly: false,
  });
  editor.setValue(response, -1);
});
// Save users file
function saveconfig(filename){
  var editor = ace.edit("editor");
  var text = editor.getValue();
  socket.emit('saveconfig',filename,text);
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Saving File</h2></center>');
}
// Delete a local file (revert)
function revertconfig(filename){
  socket.emit('revertconfig',filename);
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Reverting File</h2></center>');
}
// Create a new file
function createipxe(){
  var filename = $('.ipxefilename').val().trim();
  if (filename){
  socket.emit('createipxe',filename);
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Creating File</h2></center>');
  }
}
// Render edit window DEV Menus From var ENDPOINT_URL
function devbrowser(){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Remote Development Versions</h2></center>');
  socket.emit('devgetbrowser');
}
socket.on('devrenderbrowser', function(releases){
  $('#configcontent').empty();
  $('#configcontent').append(`
    <div class="card-group">
      <div class="card my-0">
        <div class="card-header p-2">Releases</div>
        <div class="card-body">
          <table class="table table-sm" id="releases">
            <thead>
              <tr><th>Releases</th><th></th></tr>
            </thead>
          </table>
        </div>
      </div>
    </div>
  `);
  const tableoptions = {
    paging: false,
    bInfo: false,
    sDom: 't',
    order: []
  };
  $("#releases").dataTable().fnDestroy();
  const releasestable = $('#releases').DataTable(tableoptions);
  releasestable.clear();
  if (Array.isArray(releases)) {
    $.each(releases, function(index, value){
      releasestable.row.add([
        `<a target="_blank" href="${value.html_url}" class="d-inline-block text-truncate" style="max-width: 150px;">${value.tag_name}</a>`,
        `<span class="float-end"><button onclick="downloadmenus('${value.tag_name}')" class="btn btn-outline-success btn-sm">Download</button></span>`
      ]);
    });
  } else {
    console.error('Invalid data received for releases:', releases);
  }
  releasestable.draw();
});

// Render edit window DEV Menus From Netboot.xyz github
function nbbrowser(){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Remote Netboot.xyz Versions</h2></center>');
  socket.emit('nbgetbrowser');
}
socket.on('nbrenderbrowser', function(releases,commits){
  $('#configcontent').empty();
  $('#configcontent').append(`
    <div class="row">
      <div class="col-sm-12 col-md-6 mb-3">
        <div class="card my-0">
          <div class="card-header p-2">Development Commits</div>
          <div class="card-body">
            <table class="table table-sm" id="commits">
              <thead>
                <tr><th>Commit</th><th></th></tr>
              </thead>
            </table>
          </div>
        </div>
      </div>
      <div class="col-sm-12 col-md-6 mb-3">
        <div class="card my-0">
          <div class="card-header p-2">Releases</div>
          <div class="card-body">
            <table class="table table-sm" id="releases">
              <thead>
                <tr><th>Release</th><th></th></tr>
              </thead>
            </table>
          </div>
        </div>
      </div>
    </div>
  `);
  const tableoptions = {
    paging: false,
    bInfo: false,
    sDom: 't',
    order: []
  };
  $("#commits").dataTable().fnDestroy();
  $("#releases").dataTable().fnDestroy();
  const commitstable = $('#commits').DataTable(tableoptions);
  const releasestable = $('#releases').DataTable(tableoptions);
  commitstable.clear();
  releasestable.clear();
  $.each(releases, function(index, value){
    releasestable.row.add([
      `<a target="_blank" href="${value.html_url}" class="d-inline-block text-truncate" style="max-width: 150px;">${value.tag_name}</a>`,
      `<span class="float-end"><button onclick="downloadmenusnetboot('${value.tag_name}')" class="btn btn-outline-success btn-sm">Download</button></span>`
    ]);
  });
  $.each(commits, function(index, value){
    commitstable.row.add([
      `<a target="_blank" href="${value.html_url}" class="d-inline-block text-truncate" style="max-width: 200px;">${value.sha}</a>`,
      `<span class="float-end"><button onclick="downloadmenusnetboot('${value.sha}')" class="btn btn-outline-success btn-sm">Download</button></span>`
    ]);
  });
  commitstable.draw();
  releasestable.draw();
});

// Re-render menus hook
socket.on('renderconfighook', function(){
  if($('#bd-docs-nav').length){
    renderconfig();
  }
});

//// Local rendering ////
function renderlocal(){
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Remote file list</h2></center>');
  socket.emit('getlocal');
}
socket.on('renderlocal', function(endpoints,localfiles,remotemenuversion,remotemenuorigin,remoteassetorigin,localnginxurl){
  $('#pagecontent').empty();
  $('#pagecontent').append(`
  <div class="card-group">
    <div class="card">
      <div class="card-header">
        Remote Assets at <a target="_blank" href="${remotemenuorigin}/releases/${remotemenuversion}">${remotemenuversion}</a>
        <br>
        <span style="float:right;">
          <div class="form-row">
            <div class="col"><input type="text" class="form-control form-control-sm" id="remotesearch" placeholder="Filter.."></div>
            <div class="col"><button onclick="remoteselect()" class="btn btn-primary btn-sm form-control form-control-sm">Select All</button></div>
            <div class="col"><button onclick="remoteclear()" class="btn btn-secondary btn-sm form-control form-control-sm">Clear Selection</button></div>
            <div class="col"><button onclick="dlremote()" class="btn btn-success btn-sm form-control form-control-sm">Pull Selected</button></div>
          </div>
        </span>
      </div>
      <div class="card-body">
        <table class="table table-sm" id="remoteassets">
          <thead>
            <tr>
              <th style="width: 35%;">Asset Name</th>
              <th>Asset path</th>
              <th></th>
            </tr>
          </thead>
        </table>
      </div>
    </div>
    <div class="card">
      <div class="card-header">
        Local Assets at <a target="_blank" href="${localnginxurl}">link</a>
        <br>
        <span style="float:right;">
          <div class="form-row">
            <div class="col"><input type="text" class="form-control form-control-sm" id="localsearch" placeholder="Filter.."></div>
            <div class="col"><button onclick="localselect()" class="btn btn-primary btn-sm form-control form-control-sm">Select All</button></div>
            <div class="col"><button onclick="localclear()" class="btn btn-secondary btn-sm form-control form-control-sm">Clear Selection</button></div>
            <div class="col"><button onclick="deletelocal()" class="btn btn-danger btn-sm form-control form-control-sm">Delete Selected</button></div>
          </div>
        </span>
      </div>
      <div class="card-body">
        <table class="table table-sm" id="localassets" style=".dataTables_filter {display:none;}">
          <thead>
            <tr>
              <th style="width: 35%;">Asset Name</th>
              <th>Asset path</th>
              <th></th>
            </tr>
          </thead>
        </table>
        <table class="table table-sm" id="untrackedassets" style=".dataTables_filter {display:none;}">
          <thead>
            <tr>
              <th>Untracked Assets</th>
              <th></th>
            </tr>
          </thead>
        </table>
      </div>
    </div>
  </div>`);
  var tableoptions = {
    "paging": false,
    "bInfo" : false,
    'sDom': 't',
    "order": [[ 0, "asc" ]]
  };
  $("#localassets").dataTable().fnDestroy();
  $("#remoteassets").dataTable().fnDestroy();
  var localtable = $('#localassets').DataTable(tableoptions);
  var remotetable = $('#remoteassets').DataTable(tableoptions);
  localtable.clear();
  remotetable.clear();
  $.each(endpoints.endpoints, function(index,value){
    $.each(value.files, function( arrindex, file ) {
      if (localfiles.includes(value.path + file)){
        localtable.row.add( 
          [
            index,
            value.path.split('download/')[1] + file,
            '<span style="float:right;"><input type="checkbox" class="form-check-input localcheck" value="' + value.path + file + '"></span>'

          ]
        );
        localfiles.splice( localfiles.indexOf(value.path + file), 1 );
      }
      else{
        remotetable.row.add( 
          [
            index,
            '<a href="' + remoteassetorigin + value.path + file + '" target="_blank">' + value.path.split('download/')[1] + file + '</a>',
            '<span style="float:right;"><input type="checkbox" class="form-check-input remotecheck" value="' + value.path + file + '"></span>'
          ]
        );
      }
    });
  });
  if (localfiles.length != 0){
    var untrackedtable = $('#untrackedassets').DataTable(tableoptions);
    $.each(localfiles, function( arrindex, file ) {
      if (!file.endsWith('.part2')) {
        untrackedtable.row.add( 
          [
            '/assets' + file,
            '<span style="float:right;"><input type="checkbox" class="form-check-input localcheck" value="' + file + '"></span>'
          ]
        );
      }
    });
    untrackedtable.draw();
  }
  remotetable.draw();
  localtable.draw();
  $('#localsearch').keyup(function(){
    localtable.search($(this).val()).draw() ;
  })
  $('#remotesearch').keyup(function(){
    remotetable.search($(this).val()).draw() ;
  })
});
function remoteselect(){   
  $('.remotecheck').each(function() {
    if (this.style.display != "none"){
      this.checked = true;
    }
  });
};
function remoteclear(){   
  $('.remotecheck').each(function() {
    this.checked = false;                        
  });
};
function localselect(){   
  $('.localcheck').each(function() {
    this.checked = true;                        
  });
};
function localclear(){   
  $('.localcheck').each(function() {
    this.checked = false;                        
  });
};
// Download remote files
function dlremote(){
  var allfiles = $('.remotecheck');
  var dlfiles = [];
  $.each(allfiles, function( index, value ) {
    if($(this).is(":checked")){
      dlfiles.push($(this).val());
    }
  }).promise().done(function(){
    if(dlfiles.length != 0){
      socket.emit('dlremote',dlfiles);
    }
  });
}
// Re-render local hook
socket.on('renderlocalhook', function(){
  if($('#localassets').length){
   renderlocal();
  }
});

// Delete local files
function deletelocal(){
  var allfiles = $('.localcheck');
  var deletefiles = [];
  $.each(allfiles, function( index, value ) {
    if($(this).is(":checked")){
      deletefiles.push($(this).val());
    }
  }).promise().done(function(){
    if(deletefiles.length != 0){
      socket.emit('deletelocal',deletefiles);
    }
  });
}

//// Download Status Bars ////
socket.on('dldata', function(url, count, stats){
  $('#statusbar').empty();
$('#statusbar').append('\
  <div class="row">\
    <div class="col-2">' + count[0] + ' of ' + count[1] + '</div>\
    <div class="col-10">\
      <div class="progress mb-1">\
        <div class="progress-bar" role="progressbar" style="width: ' + stats.progress + '%;" aria-valuenow="' + stats.progress + '" aria-valuemin="0" aria-valuemax="100"></div>\
      </div>\
      <div class="text-muted" style="font-size:0.85em; text-align:center;">' + url.split('download/')[1] + '</div>\
    </div>\
  </div>');
});
socket.on('purgestatus', function(){
  $('#statusbar').empty();
});

//// Render Docs ////
function renderTree(tree, parentPath = '', level = 0) {
  let html = '<ul class="nav flex-column">';

  for (const key in tree) {
    if (key === '__file') continue;

    const node = tree[key];
    const fullPath = node.__file || `${parentPath}/${key}`;

    const padding = 15 * level; // 15px indent per level

    html += `<li class="nav-item" style="padding-left: ${padding}px;">`;

    if (node.__file) {
      html += `<a href="#" class="nav-link doc-link" data-doc="${node.__file}">${key}</a>`;
    } else {
      html += `<strong>${key}</strong>`;
    }

    const hasChildren = Object.keys(node).some(k => k !== '__file');
    if (hasChildren) {
      html += renderTree(node, fullPath, level + 1);
    }

    html += `</li>`;
  }

  html += '</ul>';
  return html;
}

function renderdoc() {
  $('#pagecontent').empty();
  $('#pagecontent').append(`
    <center>
      <div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status">
        <span class="sr-only">Loading...</span>
      </div>
      <br>
      <h2>Loading Docs</h2>
    </center>
  `);
  socket.emit('docs:list');
}
socket.on('docs:list:response', function(docs) {
  $('#pagecontent').empty();
  let sidebar = `
    <div class="card">
      <div class="card-header">Documentation</div>
    </div>
    <div class="container-fluid">
      <div class="row flex-xl-nowrap">
        <div class="col-12 col-md-3 col-xl-2 bd-sidebar">
          <nav class="collapse bd-links" id="bd-docs-nav">
            ${renderTree(docs)}
          </nav>
        </div>
        <div class="col-12 col-md-9 col-xl-10">
          <div id="doc-viewer" class="p-3 text-wrap overflow-auto">
                <!-- Raw doc content here -->
                <h2 class="mb-3">📡 Welcome to the Internal Documentation</h2>
                <p>
                   Resources for understanding, developing, and maintaining
                  <code>iPXE</code> menus integrated with <strong>UpOnLAN.xyz</strong>.
                </p>
                <p>
                  While <strong>Netboot.xyz</strong> focuses on providing ready-to-use, HTTPS-hosted iPXE menu assets designed to be consumed by prebuilt iPXE boot media (.iso, .kpxe, .efi, etc.), <strong>UpOnLAN.xyz</strong> takes a different approach.
                  It is an <strong>all-in-one solution</strong> that helps you develop, customize, and serve your own iPXE menus — along with the boot media themselves — all within your local environment.
                  Ideal for offline setups, custom workflows, or LAN-based provisioning, UpOnLAN puts you in full control of your boot infrastructure.
                </p>
                <p>
                  In this documentation, you'll find guidance on:
                </p>
                <ul>
                  <li>How to structure and build <code>iPXE</code> menus</li>
                  <li>How to build and serve <code>iPXE</code> boot media locally</li>
                  <li>Serving assets through an HTTP server</li>
                  <li>Troubleshooting tips and integration strategies</li>
                  <li>Leveraging <strong>UpOnLAN.xyz</strong> features to enhance your iPXE development workflow</li>
                </ul>
                <p>
                  Whether you're a beginner or an advanced user, we hope this documentation will support you every step of the way.
                </p>
                <div class="mt-4">
                  <strong>💡 Note:</strong> This documentation is a work in progress. Contributions and suggestions are highly encouraged!
                  <br>
                  Submit improvements on GitHub: 
                  <a href="https://github.com/MozeBaltyk/UpOnLAN/tree/main/docs" target="_blank">docs repo</a> • 
                  Join the discussion: 
                  <a href="https://github.com/MozeBaltyk/UpOnLAN/discussions" target="_blank">community forum</a>
                </div>
              </div>
        </div>
      </div>
    </div>
  `;
  $('#pagecontent').append(sidebar);

  // Add click handler
  $('.doc-link').click(function (e) {
    e.preventDefault();
    $('.doc-link').removeClass('active');
    $(this).addClass('active');
    const doc = $(this).data('doc');
    loaddoc(doc);
  });
});
function loaddoc(filename) {
  $('#doc-viewer').html(`
    <div class="text-center">
      <div class="spinner-border" role="status"></div>
      <p>Loading <strong>${filename}</strong>...</p>
    </div>
  `);
  socket.emit('docs:get', filename);
}
// Handle document content response
socket.on('docs:get:response', function({ filename, content }) {
  const htmlContent = typeof marked !== 'undefined' ? content : `<pre>${content}</pre>`;
  $('#doc-viewer').html(`${htmlContent}`);
});

//// Render WOL page ////

// Display Error message if any
socket.on('error', function(msg){
  // Show the error if the WOL form is visible
  if ($('#wol-error').length) {
    $('#wol-error').text(msg).show();
  } else {
    // Fallback: alert if not on WOL page
    alert(msg);
  }
});

// Re-render WOL hook
socket.on('renderwolhook', function(){
  if($('#pagecontent').length){
    renderwol();
  }
});

function renderwol(){
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting WOL</h2></center>');
  socket.emit('getwol');
}
socket.on('renderwol', function(wolpoints, remotemenuversion){
  $('#pagecontent').empty();
  let html = `
    <div class="card mb-3">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span>Wake-On-LAN</span>
        <button id="add-wol-btn" class="btn btn-primary btn-sm rounded-circle" title="Add Host">
          <span style="font-size:1.2em;line-height:1;">&#10010;</span>
        </button>
      </div>
      <div class="card-body">
        <div id="add-wol-form" style="display:none;" class="mb-3">
          <form class="form-inline">
            <input type="text" class="form-control form-control-sm mr-2" id="new-wol-host" placeholder="Name">
            <input type="text" class="form-control form-control-sm mr-2" id="new-wol-mac" placeholder="MAC">
            <button type="button" class="btn btn-success btn-sm" id="submit-wol-btn">Add</button>
          </form>
        </div>
        <table class="table table-hover">
          <thead><tr><th>Name</th><th>MAC</th><th>Actions</th></tr></thead>
          <tbody>
  `;
  if (wolpoints && Array.isArray(wolpoints.wakeonlan)) {
    wolpoints.wakeonlan.forEach(function(host) {
      html += `<tr>
        <td>${host.hostname || ''}</td>
        <td>${host.default_mac || ''}</td>
        <td>
          <button class="btn btn-success btn-sm wake-wol-btn" data-mac="${host.default_mac}" title="Wake">
            <span style="font-size:1.2em;">&#9889;</span>
          </button>
          <button class="btn btn-danger btn-sm delete-wol-btn" data-mac="${host.default_mac}">
            <span style="font-size:1.2em;">&#128465;</span>
          </button>
        </td>
      </tr>`;
    });
  } else {
    html += `<tr><td colspan="3" class="text-center">No hosts available</td></tr>`;
  }
  html += `
          </tbody>
        </table>
      </div>
    </div>
  `;
  $('#pagecontent').append(html);

  // Handle delete button click
  $('.delete-wol-btn').click(function() {
    const mac = $(this).data('mac');
    if (confirm('Delete this host?')) {
      socket.emit('deletewol', mac);
    }
  });  

  // Wake button handler
  $('.wake-wol-btn').click(function() {
    const mac = $(this).data('mac');
    socket.emit('wakewol', mac);
  });

  // Show/hide form on button click
  $('#add-wol-btn').click(function() {
    $('#add-wol-form').toggle();
  });

  // Handle form submission
  $('#submit-wol-btn').click(function() {
    $('#wol-error').hide();
    const hostname = $('#new-wol-host').val().trim();
    const mac = $('#new-wol-mac').val().trim();
    if (hostname && mac) {
      socket.emit('addwol', { hostname: hostname, default_mac: mac });
      $('#add-wol-form').hide();
      $('#new-wol-host').val('');
      $('#new-wol-mac').val('');
    }
  });
});
