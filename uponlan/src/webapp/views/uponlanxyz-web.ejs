// uponlan.xyz
// Client side javascript


// Initiate a websocket connection to the server
var host = window.location.hostname; 
var port = window.location.port;
var protocol = window.location.protocol;
var socket = io.connect(protocol + '//' + host + ':' + port, {path: "<%= baseurl %>socket.io"});
// If the page is being loaded for the first time render in the homepage
$(document).ready(function(){renderdash()})


//// Dashboard Page rendering ////
function renderdash(){
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Dashboard</h2></center>');
  socket.emit('getdash');
}
socket.on('renderdash', function(response){
  var tftpversion = response.tftpversion;
  var nginxversion = response.nginxversion;
  var wolversion = response.wolversion;
  var otelversion = response.otelversion;
  var webversion = response.webversion;
  var menuversion = response.menuversion;
  var menuorigin = response.menuorigin;
  var remotemenuversion = response.remotemenuversion;
  var cpustats = response.cpu;
  var cpupercent = response.CPUpercent;
  var memstats = response.mem;
  var usedmem = (memstats.active/memstats.total)*100;
  var totalmem = parseFloat(memstats.total/1000000000).toFixed(2);
  var diskbuffer = parseFloat(memstats.buffcache/1000000000).toFixed(2);
  if (menuversion != remotemenuversion){
    var upgradebutton = '<button onclick="upgrademenus(\'' + remotemenuversion + '\')" class="btn btn-success btn-sm">' + remotemenuversion + ' Available</button>'
  }
  else{
    var upgradebutton = '<button class="btn btn-secondary btn-sm">Up to Date</button>'
  }
  $('#pagecontent').empty();
  $('#pagecontent').append('\
  <div class="card mb-3">\
    <div class="card-header">\
      Software and Services\
    </div>\
    <div class="card-body card-deck">\
      <div class="card mb-3">\
        <div class="card-header">\
          Versions\
        </div>\
        <div class="card-body">\
        <table class="table table-hover">\
          <tr><td>Webapp Version: </td><td><a target="_blank" href="https://github.com/mozebaltyk/uponlan/releases/' + webversion + '">' + webversion + '</a></td></tr>\
          <tr><td>Menus Version:</td><td><a target="_blank" href="' + menuorigin + '/releases/' + menuversion + '">' + menuversion + '</a></td></tr>\
          <tr><td>Upgrade Menus to latest</td><td><div id="upgradebutton">' + upgradebutton + '</div></td></tr>\
        </table>\
        </div>\
      </div>\
      <div class="card mb-3">\
        <div class="card-header">\
          Services\
        </div>\
        <div class="card-body">\
        <table class="table table-hover">\
          <tr><td>TFTP:</td><td>' + tftpversion + '</td></tr>\
          <tr><td>WebServer:</td><td>' + nginxversion + '</td></tr>\
          <tr><td>WakeOnLAN:</td><td>' + wolversion + '</td></tr>\
        </table>\
        </div>\
      </div>\
    </div>\
  </div>\
  <div class="card mb-3">\
    <div class="card-header">\
      System Stats\
    </div>\
    <div class="card-body card-deck">\
      <div class="card mb-3">\
        <div class="card-header">\
          CPU\
        </div>\
        <div class="card-body">\
        <table class="table table-hover">\
          <tr><td>CPU</td><td>' + cpustats.manufacturer + ' ' + cpustats.brand + '</td></tr>\
          <tr><td>Cores</td><td>' + cpustats.cores + '</td></tr>\
          <tr><td>Usage</td><td><div class="progress"><div class="progress-bar" role="progressbar" style="width: ' + cpupercent + '%;" aria-valuenow="' + cpupercent + '" aria-valuemin="0" aria-valuemax="100"></div></div></td></tr>\
        </table>\
        </div>\
      </div>\
      <div class="card mb-3">\
        <div class="card-header">\
          Memory\
        </div>\
        <div class="card-body">\
        <table class="table table-hover">\
          <tr><td>Total Mem</td><td>' + totalmem + 'G</td></tr>\
          <tr><td>Disk buffer</td><td>' + diskbuffer + 'G</td></tr>\
          <tr><td>Usage</td><td><div class="progress"><div class="progress-bar" role="progressbar" style="width: ' + usedmem + '%;" aria-valuenow="' + usedmem + '" aria-valuemin="0" aria-valuemax="100"></div></div></td></tr>\
        </table>\
        </div>\
      </div>\
    </div>\
  </div>\
  <div class="card mb-3">\
    <div class="card-header d-flex justify-content-between align-items-center">\
      Logs & Metrics\
    </div>\
    <div class="card-body">\
      <div class="row">\
        <div class="col-md-7 mb-3">\
          <div class="card h-100">\
            <!-- Logs Tabs Card -->\
            <div class="card-header">\
              <ul class="nav nav-tabs card-header-tabs" id="logTabs" role="tablist">\
                <li class="nav-item">\
                  <a class="nav-link active" id="webapp-tab" data-toggle="tab" href="#webapp-log" role="tab" aria-controls="webapp-log" aria-selected="true">Webapp Logs</a>\
                </li>\
                <li class="nav-item">\
                  <a class="nav-link" id="tftp-tab" data-toggle="tab" href="#tftp-log" role="tab" aria-controls="tftp-log" aria-selected="false">TFTP Logs</a>\
                </li>\
                <li class="nav-item">\
                  <a class="nav-link" id="nginx-access-tab" data-toggle="tab" href="#nginx-access-log" role="tab" aria-controls="nginx-access-log" aria-selected="false">Nginx Access Logs</a>\
                </li>\
                <li class="nav-item">\
                  <a class="nav-link" id="nginx-error-tab" data-toggle="tab" href="#nginx-error-log" role="tab" aria-controls="nginx-error-log" aria-selected="false">Nginx Error Logs</a>\
                </li>\
              </ul>\
            </div>\
            <div class="card-body d-flex flex-column" style="height:340px; background:#222; color:#eee; font-family:monospace; font-size:0.9em;">\
              <div class="tab-content flex-grow-1" id="logTabsContent" style="overflow-y: auto;">\
                <div class="tab-pane fade show active h-100" id="webapp-log" role="tabpanel" aria-labelledby="webapp-tab">\
                  <div id="weblog-content" class="h-100" style="overflow-y:auto;">Click tab to load logs...</div>\
                </div>\
                <div class="tab-pane fade h-100" id="tftp-log" role="tabpanel" aria-labelledby="tftp-tab">\
                  <div id="tftplog-content" class="h-100" style="overflow-y:auto;">Click tab to load logs...</div>\
                </div>\
                <div class="tab-pane fade h-100" id="nginx-access-log" role="tabpanel" aria-labelledby="nginx-access-tab">\
                  <div id="nginx-access-log-content" class="h-100" style="overflow-y:auto;">Click tab to load logs...</div>\
                </div>\
                <div class="tab-pane fade h-100" id="nginx-error-log" role="tabpanel" aria-labelledby="nginx-error-tab">\
                  <div id="nginx-error-log-content" class="h-100" style="overflow-y:auto;">Click tab to load logs...</div>\
                </div>\
              </div>\
            </div>\
          </div>\
        </div>\
        <div class="col-md-5 mb-3">\
          <div class="card h-100">\
            <!-- Live Metrics Card -->\
            <div class="card-header">Live Metrics</div>\
            <div class="card-body d-flex justify-content-center align-items-center">\
              <canvas id="MetricsChart" style="width:100%; min-height:250px;"></canvas>\
            </div>\
          </div>\
        </div>\
      </div>\
    </div>\
  </div>\
  <br>\
  <div class="card-footer text-center" style="background: #f8f9fa;">\
    <span class="text-muted">\
      <a href="https://github.com/MozeBaltyk/UpOnLAN" target="_blank" class="text-secondary" style="text-decoration:none;">\
        <img src="https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png" alt="GitHub" style="height:2em;vertical-align:middle;margin-right:12px;">\
        UpOnLAN.xyz\
      </a>\
    </span>\
  </div>\
  ');
  // Render logs in the dashboard
  renderLog('#webapp-tab', '#weblog-content', 'getweblog', 'renderweblog');
  renderLog('#tftp-tab', '#tftplog-content', 'gettftplog', 'rendertftplog');
  renderLog('#nginx-access-tab', '#nginx-access-log-content', 'getnginxaccesslog', 'rendernginxaccesslog');
  renderLog('#nginx-error-tab', '#nginx-error-log-content', 'getnginxerrorlog', 'rendernginxerrorlog');
  // show the webapp logs tab by default
  $('#webapp-tab').trigger('click');

  // Initialize the live metrics chart
  initMetricsChart();
});

// Render metrics
let MetricsChart;
let storedChartData = [];
const MAX_POINTS = 40;

// Call this inside renderdash after canvas is injected
function initMetricsChart() {
  const canvas = document.getElementById('MetricsChart');
  if (!canvas) return setTimeout(initMetricsChart, 100); // Retry after short delay

  const ctx = canvas.getContext('2d');

  // If canvas was replaced in the DOM (e.g., after tab switch), destroy the old chart
  if (MetricsChart && MetricsChart.canvas !== canvas) {
    MetricsChart.destroy();
    MetricsChart = null;
  }

  // Avoid re-creating if already valid
  if (MetricsChart) return;

  MetricsChart = new Chart(ctx, {
    type: 'line',
    data: {
      datasets: [
        { label: 'Ngx Req.', borderColor: 'rgba(70,130,180,0.7)', borderWidth: 1, data: [], fill: false, tension: 0.4, },  // SteelBlue
        { label: 'Ngx Accept.', borderColor: 'rgba(60,179,113,0.7)', borderWidth: 1, data: [], fill: false, tension: 0.4, },  // MediumSeaGreen
        { label: 'Ngx Handl.', borderColor: 'rgba(255,165,0,0.7)', borderWidth: 1, data: [], fill: false, tension: 0.4, },    // Orange
        { label: 'Ngx Active', borderColor: 'rgba(220,20,60,0.7)', borderWidth: 1, data: [], fill: false, tension: 0.4, },     // Crimson
        { label: 'TFTP Req.', borderColor: 'rgba(155,89,182,0.5)', borderWidth: 1, data: [], fill: false, tension: 0.4, }, // Soft Amethyst
      ]
    },
    options: {
      responsive: true,
      animation: false,
      scales: {
        x: {
          type: 'time',
          time: {
            unit: 'minute',
            tooltipFormat: 'HH:mm:ss',
            displayFormats: { minute: 'HH:mm' }
          },
          title: { display: false, text: 'Time' }
        },
        y: {
          beginAtZero: true,
          title: { display: true, text: 'TFTP / Nginx Req. every 15s' }
        }
      },
      elements: {
        line: { tension: 0.1 }, // Smooth lines
        point: { radius: 1, hoverRadius: 2 } // Smaller points
      },
      plugins: {
        legend: {
          display: true,
          position: 'bottom',
          labels: {
            boxWidth: 9,
            font: {
              size: 9
            },
            color: '#444'
          }
        }
      }
    }
  });

  // Restore historical data
  storedChartData.forEach(point => {
    MetricsChart.data.datasets.forEach((d, i) => {
      d.data.push(point[i]);
    });
  });

  MetricsChart.update();
}

socket.on('metrics:update', function (data) {
  const time = new Date(data.timestamp || Date.now());

  const point = [
    { x: time, y: data.nginx.requests },
    { x: time, y: data.nginx.accepts },
    { x: time, y: data.nginx.handled },
    { x: time, y: data.nginx.active },
    { x: time, y: data.tftp.requests },
  ];

  // Store it regardless of chart existence (for restoration later)
  storedChartData.push(point);
  if (storedChartData.length > MAX_POINTS) storedChartData.shift();

  // If chart is ready, update it live
  if (MetricsChart) {
    MetricsChart.data.datasets.forEach((d, i) => {
      d.data.push(point[i]);
      if (d.data.length > MAX_POINTS) d.data.shift();
    });
    MetricsChart.update();
  }
});

// Common function to render logs in tabs
function renderLog(tabSelector, contentSelector, emitEvent, onResponseEvent) {
  $(tabSelector).on('click', function() {
    $(contentSelector).text('Loading...');
    socket.emit(emitEvent);
  });
  socket.on(onResponseEvent, function(logContent) {
    // convert newlines to <br> to keep formatting
    $(contentSelector).html(logContent.replace(/\n/g, '<br>'));
  });
}

// Upgrade menu files
function upgrademenus(version){
  $('#upgradebutton').empty();
  $('#upgradebutton').append('<div class="spinner-grow" style="width: 1rem; height: 1rem;" role="status"><span class="sr-only">Loading...</span></div>');
  socket.emit('upgrademenu', version);
}
function downloadmenus(version){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Pulling menus at version requested</h2></center>');
  socket.emit('upgrademenu', version);
}
function downloadmenusnetboot(version){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Pulling menus at version requested</h2></center>');
  socket.emit('upgrademenunetboot', version);
}
// Re-render dash hook
socket.on('renderdashhook', function(){
  if($('#upgradebutton').length){
    renderdash();
  }
});

//// Config Page rendering ////
function renderconfig(){
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Config Items</h2></center>');
  socket.emit('getconfig');
}
socket.on('renderconfig', function(remote_files,local_files,filename,islocal){
  $('#pagecontent').empty();
  $('#pagecontent').append('\
  <div class="card">\
    <div class="card-header">Menus</div>\
  </div>\
  <div class="container-fluid">\
    <div class="row flex-xl-nowrap">\
      <div class="col-12 col-md-3 col-xl-2 bd-sidebar">\
        <button class="btn btn-link bd-search-docs-toggle d-md-none p-0 ml-3" type="button" data-toggle="collapse" data-target="#bd-docs-nav" aria-controls="bd-docs-nav" aria-expanded="false" aria-label="Toggle files navigation">\
          <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 30 30" width="30" height="30" focusable="false">\
            <title>Files</title>\
            <path stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-miterlimit="10" d="M4 7h22M4 15h22M4 23h22"/>\
          </svg>\
        </button>\
        <nav class="collapse bd-links" id="bd-docs-nav">\
      </div>\
      <div id="configcontent" class="col-12 col-md-9 col-xl-10">\
        <center>\
          <h3>Edit file on the left panel<br><br></h3>\
          <h3>Create a new file:</h3>\
          <div class="form-row">\
            <div class="col-md-4"></div>\
            <div class="col-md-2"><input type="text" class="form-control ipxefilename" placeholder="myfile.ipxe"></div>\
            <div class="col-md-2"><button onclick="createipxe()" class="btn btn-primary form-control">Create New</button></div>\
            <div class="col-md-4"></div>\
          </div><br><br>\
          <h3>Import a menu:</h3>\
          <div class="form-row">\
            <div class="col-md-4"></div>\
            <div class="col-md-4"><button onclick="devbrowser()" class="btn btn-outline-info form-control">Menu From Endpoint URL</button></div>\
            <div class="col-md-4"></div>\
          </div><br><br>\
          <div class="form-row">\
            <div class="col-md-4"></div>\
            <div class="col-md-4"><button onclick="nbbrowser()" class="btn btn-outline-info form-control">Menu Netboot.xyz</button></div>\
            <div class="col-md-4"></div>\
          </div><br><br>\
          <h3>Erase menus:</h3>\
          <div class="form-row">\
            <div class="col-md-4"></div>\
            <div class="col-md-4"><button onclick="resetmenu()" class="btn btn-outline-danger form-control">Reset Menus</button></div>\
            <div class="col-md-4"></div>\
          </div>\
        </center>\
      </div>\
    </div>\
  </div>');
  // Render the file list
  $(local_files).each(function( index, value ) {
    $('#bd-docs-nav').append('\
    <div class="bd-toc-item">\
      <div style="cursor:pointer;" class="bd-toc-link" onclick="editgetfile(\'' + value + '\',true)">\
        ' + value + ' - custom\
      </div>\
    </div>');
  }).promise().done(function(){
    $(remote_files).each(function( index, value ) {
      if (! local_files.includes(value)){
        $('#bd-docs-nav').append('\
        <div class="bd-toc-item">\
          <div style="cursor:pointer;" class="bd-toc-link" onclick="editgetfile(\'' + value + '\',false)">\
            ' + value + '\
          </div>\
        </div>');
      }
    }).promise().done(function(){
      if (filename){
        socket.emit('editgetfile',filename,islocal);
      }
    });
  });
});
// Empty menu
function resetmenu() {
  if (confirm('Are you sure you want to reset the menu?')) {
    $('#configcontent').empty();
    $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Empty Menu</h2></center>');
    socket.emit('emptymenu');
    // Refresh the config page after a short delay
    setTimeout(renderconfig, 1000)
  }
}
// Render edit window
function editgetfile(filename,islocal){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting File Contents</h2></center>');
  socket.emit('editgetfile',filename,islocal);
}
socket.on('editrenderfile', function(response,filename,metadata){
  // Filter the buttons to display based on type
  if (metadata == 'nomenu'){
    var buttons = '';
  }
  else if (metadata == false){
    var buttons = '<button onclick="saveconfig(\'' + filename + '\')" class="btn btn-success m-3 float-right">Save Config</button>';
  }
  else if (metadata == true){
    var buttons = '<button onclick="saveconfig(\'' + filename + '\')" class="btn btn-success m-3 float-right">Save Config</button>\
                   <button onclick="revertconfig(\'' + filename + '\')" class="btn btn-danger m-3 float-right">Revert/Delete</button>';
  }
  $('#configcontent').empty();
  $('#configcontent').append('\
  <div class="container">\
    <div class="row">\
      <div class="col">\
        <h1 class="m-3">' + filename + '</h1>\
      </div>\
      <div class="col">\
        ' + buttons + '\
      </div>\
    </div>\
  </div>\
  <div id="editor" style="height:100%;width:100%"></div>');
  editor = ace.edit('editor');
  editor.setTheme('ace/theme/chrome');
  editor.session.setMode('ace/mode/sh');
  editor.$blockScrolling = Infinity;
  editor.setOptions({
    readOnly: false,
  });
  editor.setValue(response, -1);
});
// Save users file
function saveconfig(filename){
  var editor = ace.edit("editor");
  var text = editor.getValue();
  socket.emit('saveconfig',filename,text);
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Saving File</h2></center>');
}
// Delete a local file (revert)
function revertconfig(filename){
  socket.emit('revertconfig',filename);
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Reverting File</h2></center>');
}
// Create a new file
function createipxe(){
  var filename = $('.ipxefilename').val().trim();
  if (filename){
  socket.emit('createipxe',filename);
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Creating File</h2></center>');
  }
}
// Render edit window DEV Menus From var ENDPOINT_URL
// This function fetches and displays remote development versions of menus from an endpoint URL.
function devbrowser(){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Remote Development Versions</h2></center>');
  socket.emit('devgetbrowser');
}
socket.on('devrenderbrowser', function(releases){
  $('#configcontent').empty();
  $('#configcontent').append('\
  <div class="card-group">\
    <div class="card">\
      <div class="card-header">\
        Releases\
      </div>\
      <div class="card-body">\
      <table class="table table-sm" id="releases" style=".dataTables_filter {display:none;}">\
        <thead>\
          <tr>\
            <th>Releases</th>\
            <th></th>\
          </tr>\
        </thead>\
      </table>\
      </div>\
    </div>\
  </div>');
  var tableoptions = {
    "paging": false,
    "bInfo" : false,
    'sDom': 't',
    "order": []
  };
  $("#releases").dataTable().fnDestroy();
  var releasestable = $('#releases').DataTable(tableoptions);
  releasestable.clear();
  if (Array.isArray(releases)) {
    $.each(releases, function(index,value){
      releasestable.row.add( 
        [
          '<a target="_blank" href="' + value.html_url + '">' + value.tag_name + '</a>',
          '<span style="float:right;"><button onclick="downloadmenus(\'' + value.tag_name + '\')" class="btn btn-outline-success btn-sm">Download</button></span>'
        ]
      );
    });
  } else {
    console.error('Invalid data received for releases:', releases);
  }
  releasestable.draw();
});



// Render edit window DEV Menus From Netboot.xyz github
// This function fetches and displays remote development versions of menus from the Netboot.xyz GitHub repository.
function nbbrowser(){
  $('#configcontent').empty();
  $('#configcontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Remote Netboot.xyz Versions</h2></center>');
  socket.emit('nbgetbrowser');
}
socket.on('nbrenderbrowser', function(releases,commits){
  $('#configcontent').empty();
  $('#configcontent').append('\
  <div class="card-group">\
    <div class="card">\
      <div class="card-header">\
        Development Commits\
      </div>\
      <div class="card-body">\
      <table class="table table-sm" id="commits">\
        <thead>\
          <tr>\
            <th>Commit</th>\
            <th></th>\
          </tr>\
        </thead>\
      </table>\
      </div>\
    </div>\
    <div class="card">\
      <div class="card-header">\
        Releases\
      </div>\
      <div class="card-body">\
      <table class="table table-sm" id="releases" style=".dataTables_filter {display:none;}">\
        <thead>\
          <tr>\
            <th>Release</th>\
            <th></th>\
          </tr>\
        </thead>\
      </table>\
      </div>\
    </div>\
  </div>');
  var tableoptions = {
    "paging": false,
    "bInfo" : false,
    'sDom': 't',
    "order": []
  };
  $("#commits").dataTable().fnDestroy();
  $("#releases").dataTable().fnDestroy();
  var commitstable = $('#commits').DataTable(tableoptions);
  var releasestable = $('#releases').DataTable(tableoptions);
  commitstable.clear();
  releasestable.clear();
  $.each(releases, function(index,value){
    releasestable.row.add( 
      [
        '<a target="_blank" href="' + value.html_url + '">' + value.tag_name + '</a>',
        '<span style="float:right;"><button onclick="downloadmenusnetboot(\'' + value.tag_name + '\')" class="btn btn-outline-success btn-sm">Download</button></span>'
      ]
    );
  });
  $.each(commits, function(index,value){
    commitstable.row.add( 
      [
        '<a target="_blank" href="' + value.html_url + '">' + value.sha + '</a>',
        '<span style="float:right;"><button onclick="downloadmenusnetboot(\'' + value.sha + '\')" class="btn btn-outline-success btn-sm">Download</button></span>'
      ]
    );
  });
  commitstable.draw();
  releasestable.draw();
});

// Re-render menus hook
socket.on('renderconfighook', function(){
  if($('#bd-docs-nav').length){
    renderconfig();
  }
});

//// Local rendering ////
function renderlocal(){
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting Remote file list</h2></center>');
  socket.emit('getlocal');
}
socket.on('renderlocal', function(endpoints,localfiles,remotemenuversion){
  $('#pagecontent').empty();
  $('#pagecontent').append('\
  <div class="card-group">\
    <div class="card">\
      <div class="card-header">\
        Remote Assets at <a target="_blank" href="https://github.com/mozebaltyk/uponlan/releases/' + remotemenuversion + '">' + remotemenuversion + '</a>\
        <br>\
        <span style="float:right;">\
          <div class="form-row">\
            <div class="col"><input type="text" class="form-control form-control-sm" id="remotesearch" placeholder="Filter.."></div>\
            <div class="col"><button onclick="remoteselect()" class="btn btn-primary btn-sm form-control form-control-sm">Select All</button></div>\
            <div class="col"><button onclick="remoteclear()" class="btn btn-secondary btn-sm form-control form-control-sm">Clear Selection</button></div>\
            <div class="col"><button onclick="dlremote()" class="btn btn-success btn-sm form-control form-control-sm">Pull Selected</button></div>\
          </div>\
        </span>\
      </div>\
      <div class="card-body">\
      <table class="table table-sm" id="remoteassets">\
        <thead>\
          <tr>\
            <th style="width: 35%;">Asset Name</th>\
            <th>Asset path</th>\
            <th></th>\
          </tr>\
        </thead>\
      </table>\
      </div>\
    </div>\
    <div class="card">\
      <div class="card-header">\
        Local Assets at <a target="_blank" href="http://localhost:8080">link</a>\
        <br>\
        <span style="float:right;">\
          <div class="form-row">\
            <div class="col"><input type="text" class="form-control form-control-sm" id="localsearch" placeholder="Filter.."></div>\
            <div class="col"><button onclick="localselect()" class="btn btn-primary btn-sm form-control form-control-sm">Select All</button></div>\
            <div class="col"><button onclick="localclear()" class="btn btn-secondary btn-sm form-control form-control-sm">Clear Selection</button></div>\
            <div class="col"><button onclick="deletelocal()" class="btn btn-danger btn-sm form-control form-control-sm">Delete Selected</button></div>\
          </div>\
        </span>\
      </div>\
      <div class="card-body">\
      <table class="table table-sm" id="localassets" style=".dataTables_filter {display:none;}">\
        <thead>\
          <tr>\
            <th style="width: 35%;">Asset Name</th>\
            <th>Asset path</th>\
            <th></th>\
          </tr>\
        </thead>\
      </table>\
      <table class="table table-sm" id="untrackedassets" style=".dataTables_filter {display:none;}">\
        <thead>\
          <tr>\
            <th>Untracked Assets</th>\
            <th></th>\
          </tr>\
        </thead>\
      </table>\
      </div>\
    </div>\
  </div>');
  var tableoptions = {
    "paging": false,
    "bInfo" : false,
    'sDom': 't',
    "order": [[ 0, "asc" ]]
  };
  $("#localassets").dataTable().fnDestroy();
  $("#remoteassets").dataTable().fnDestroy();
  var localtable = $('#localassets').DataTable(tableoptions);
  var remotetable = $('#remoteassets').DataTable(tableoptions);
  localtable.clear();
  remotetable.clear();
  $.each(endpoints.endpoints, function(index,value){
    $.each(value.files, function( arrindex, file ) {
      if (localfiles.includes(value.path + file)){
        localtable.row.add( 
          [
            index,
            value.path.split('download/')[1] + file,
            '<span style="float:right;"><input type="checkbox" class="form-check-input localcheck" value="' + value.path + file + '"></span>'

          ]
        );
        localfiles.splice( localfiles.indexOf(value.path + file), 1 );
      }
      else{
        remotetable.row.add( 
          [
            index,
            '<a href="https://github.com/netbootxyz' + value.path + file + '" target="_blank">' + value.path.split('download/')[1] + file + '</a>',
            '<span style="float:right;"><input type="checkbox" class="form-check-input remotecheck" value="' + value.path + file + '"></span>'
          ]
        );
      }
    });
  });
  if (localfiles.length != 0){
    var untrackedtable = $('#untrackedassets').DataTable(tableoptions);
    $.each(localfiles, function( arrindex, file ) {
      if (!file.endsWith('.part2')) {
        untrackedtable.row.add( 
          [
            '/assets' + file,
            '<span style="float:right;"><input type="checkbox" class="form-check-input localcheck" value="' + file + '"></span>'
          ]
        );
      }
    });
    untrackedtable.draw();
  }
  remotetable.draw();
  localtable.draw();
  $('#localsearch').keyup(function(){
    localtable.search($(this).val()).draw() ;
  })
  $('#remotesearch').keyup(function(){
    remotetable.search($(this).val()).draw() ;
  })
});
function remoteselect(){   
  $('.remotecheck').each(function() {
    if (this.style.display != "none"){
      this.checked = true;
    }
  });
};
function remoteclear(){   
  $('.remotecheck').each(function() {
    this.checked = false;                        
  });
};
function localselect(){   
  $('.localcheck').each(function() {
    this.checked = true;                        
  });
};
function localclear(){   
  $('.localcheck').each(function() {
    this.checked = false;                        
  });
};
// Download remote files
function dlremote(){
  var allfiles = $('.remotecheck');
  var dlfiles = [];
  $.each(allfiles, function( index, value ) {
    if($(this).is(":checked")){
      dlfiles.push($(this).val());
    }
  }).promise().done(function(){
    if(dlfiles.length != 0){
      socket.emit('dlremote',dlfiles);
    }
  });
}
// Re-render local hook
socket.on('renderlocalhook', function(){
  if($('#localassets').length){
   renderlocal();
  }
});

// Delete local files
function deletelocal(){
  var allfiles = $('.localcheck');
  var deletefiles = [];
  $.each(allfiles, function( index, value ) {
    if($(this).is(":checked")){
      deletefiles.push($(this).val());
    }
  }).promise().done(function(){
    if(deletefiles.length != 0){
      socket.emit('deletelocal',deletefiles);
    }
  });
}

//// Download Status Bars ////
socket.on('dldata', function(url, count, stats){
  $('#statusbar').empty();
$('#statusbar').append('\
  <div class="row">\
    <div class="col-2">' + count[0] + ' of ' + count[1] + '</div>\
    <div class="col-10">\
      <div class="progress mb-1">\
        <div class="progress-bar" role="progressbar" style="width: ' + stats.progress + '%;" aria-valuenow="' + stats.progress + '" aria-valuemin="0" aria-valuemax="100"></div>\
      </div>\
      <div class="text-muted" style="font-size:0.85em; text-align:center;">' + url.split('download/')[1] + '</div>\
    </div>\
  </div>');
});
socket.on('purgestatus', function(){
  $('#statusbar').empty();
});

//// Render WOL page ////

// Display Error message if any
socket.on('error', function(msg){
  // Show the error if the WOL form is visible
  if ($('#wol-error').length) {
    $('#wol-error').text(msg).show();
  } else {
    // Fallback: alert if not on WOL page
    alert(msg);
  }
});

// Re-render WOL hook
socket.on('renderwolhook', function(){
  if($('#pagecontent').length){
    renderwol();
  }
});

function renderwol(){
  $('#pagecontent').empty();
  $('#pagecontent').append('<center><div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status"><span class="sr-only">Loading...</span></div><br><h2>Getting WOL</h2></center>');
  socket.emit('getwol');
}
socket.on('renderwol', function(wolpoints, remotemenuversion){
  $('#pagecontent').empty();
  let html = `
    <div class="card mb-3">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span>Wake-On-LAN</span>
        <button id="add-wol-btn" class="btn btn-primary btn-sm rounded-circle" title="Add Host">
          <span style="font-size:1.2em;line-height:1;">&#10010;</span>
        </button>
      </div>
      <div class="card-body">
        <div id="add-wol-form" style="display:none;" class="mb-3">
          <form class="form-inline">
            <input type="text" class="form-control form-control-sm mr-2" id="new-wol-host" placeholder="Name">
            <input type="text" class="form-control form-control-sm mr-2" id="new-wol-mac" placeholder="MAC">
            <button type="button" class="btn btn-success btn-sm" id="submit-wol-btn">Add</button>
          </form>
        </div>
        <table class="table table-hover">
          <thead><tr><th>Name</th><th>MAC</th><th>Actions</th></tr></thead>
          <tbody>
  `;
  if (wolpoints && Array.isArray(wolpoints.wakeonlan)) {
    wolpoints.wakeonlan.forEach(function(host) {
      html += `<tr>
        <td>${host.hostname || ''}</td>
        <td>${host.default_mac || ''}</td>
        <td>
          <button class="btn btn-success btn-sm wake-wol-btn" data-mac="${host.default_mac}" title="Wake">
            <span style="font-size:1.2em;">&#9889;</span>
          </button>
          <button class="btn btn-danger btn-sm delete-wol-btn" data-mac="${host.default_mac}">
            <span style="font-size:1.2em;">&#128465;</span>
          </button>
        </td>
      </tr>`;
    });
  } else {
    html += `<tr><td colspan="3" class="text-center">No hosts available</td></tr>`;
  }
  html += `
          </tbody>
        </table>
      </div>
    </div>
  `;
  $('#pagecontent').append(html);

  // Handle delete button click
  $('.delete-wol-btn').click(function() {
    const mac = $(this).data('mac');
    if (confirm('Delete this host?')) {
      socket.emit('deletewol', mac);
    }
  });  

  // Wake button handler
  $('.wake-wol-btn').click(function() {
    const mac = $(this).data('mac');
    socket.emit('wakewol', mac);
  });

  // Show/hide form on button click
  $('#add-wol-btn').click(function() {
    $('#add-wol-form').toggle();
  });

  // Handle form submission
  $('#submit-wol-btn').click(function() {
    $('#wol-error').hide();
    const hostname = $('#new-wol-host').val().trim();
    const mac = $('#new-wol-mac').val().trim();
    if (hostname && mac) {
      socket.emit('addwol', { hostname: hostname, default_mac: mac });
      $('#add-wol-form').hide();
      $('#new-wol-host').val('');
      $('#new-wol-mac').val('');
    }
  });

});
